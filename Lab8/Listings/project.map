Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Section Cross References

    main.o(.ARM.exidx.text.delay) refers to main.o(.text.delay) for [Anonymous Symbol]
    main.o(.text.GPIOF_Handler) refers to main.o(.bss.semaphore) for semaphore
    main.o(.text.GPIOF_Handler) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    main.o(.text.GPIOF_Handler) refers to gpio.o(i.GPIOIntClear) for GPIOIntClear
    main.o(.ARM.exidx.text.GPIOF_Handler) refers to main.o(.text.GPIOF_Handler) for [Anonymous Symbol]
    main.o(.text.initTask) refers to main.o(.text.GPIOF_Handler) for GPIOF_Handler
    main.o(.text.initTask) refers to sysctl.o(i.SysCtlPeripheralEnable) for SysCtlPeripheralEnable
    main.o(.text.initTask) refers to sysctl.o(i.SysCtlPeripheralReady) for SysCtlPeripheralReady
    main.o(.text.initTask) refers to gpio.o(i.GPIOPinTypeGPIOOutput) for GPIOPinTypeGPIOOutput
    main.o(.text.initTask) refers to gpio.o(i.GPIOUnlockPin) for GPIOUnlockPin
    main.o(.text.initTask) refers to gpio.o(i.GPIOPinTypeGPIOInput) for GPIOPinTypeGPIOInput
    main.o(.text.initTask) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    main.o(.text.initTask) refers to interrupt.o(i.IntMasterEnable) for IntMasterEnable
    main.o(.text.initTask) refers to gpio.o(i.GPIOIntEnable) for GPIOIntEnable
    main.o(.text.initTask) refers to gpio.o(i.GPIOIntTypeSet) for GPIOIntTypeSet
    main.o(.text.initTask) refers to gpio.o(i.GPIOIntRegister) for GPIOIntRegister
    main.o(.text.initTask) refers to interrupt.o(i.IntPrioritySet) for IntPrioritySet
    main.o(.text.initTask) refers to gpio.o(i.GPIOPinTypeUART) for GPIOPinTypeUART
    main.o(.text.initTask) refers to uart.o(i.UARTDisable) for UARTDisable
    main.o(.text.initTask) refers to sysctl.o(i.SysCtlClockGet) for SysCtlClockGet
    main.o(.text.initTask) refers to uart.o(i.UARTConfigSetExpClk) for UARTConfigSetExpClk
    main.o(.text.initTask) refers to uart.o(i.UARTEnable) for UARTEnable
    main.o(.text.initTask) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    main.o(.ARM.exidx.text.initTask) refers to main.o(.text.initTask) for [Anonymous Symbol]
    main.o(.text.CounterTask) refers to main.o(.bss.mutex) for mutex
    main.o(.text.CounterTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.CounterTask) refers to uart.o(i.UARTCharPut) for UARTCharPut
    main.o(.text.CounterTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.CounterTask) refers to main.o(.text.CounterTask) for [Anonymous Symbol]
    main.o(.text.LedTogglerTask) refers to main.o(.bss.semaphore) for semaphore
    main.o(.text.LedTogglerTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    main.o(.text.LedTogglerTask) refers to main.o(.bss.mutex) for mutex
    main.o(.text.LedTogglerTask) refers to gpio.o(i.GPIOPinRead) for GPIOPinRead
    main.o(.text.LedTogglerTask) refers to gpio.o(i.GPIOPinWrite) for GPIOPinWrite
    main.o(.text.LedTogglerTask) refers to uart.o(i.UARTCharPut) for UARTCharPut
    main.o(.text.LedTogglerTask) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.LedTogglerTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.ARM.exidx.text.LedTogglerTask) refers to main.o(.text.LedTogglerTask) for [Anonymous Symbol]
    main.o(.text.main) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    main.o(.text.main) refers to main.o(.bss.semaphore) for semaphore
    main.o(.text.main) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    main.o(.text.main) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    main.o(.text.main) refers to main.o(.bss.mutex) for mutex
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.main) refers to main.o(.text.initTask) for initTask
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to main.o(.text.CounterTask) for CounterTask
    main.o(.text.main) refers to main.o(.text.LedTogglerTask) for LedTogglerTask
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    startup_tm4c123.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(STACK) for __initial_sp
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(.text) for Reset_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_tm4c123.o(RESET) refers to main.o(.text.GPIOF_Handler) for GPIOF_Handler
    startup_tm4c123.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_tm4c123.o(.text) refers to system_tm4c123.o(.text.SystemInit) for SystemInit
    startup_tm4c123.o(.text) refers to __main.o(!!!main) for __main
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(HEAP) for Heap_Mem
    startup_tm4c123.o(.text) refers to startup_tm4c123.o(STACK) for Stack_Mem
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.rodata..Lswitch.table.SystemCoreClockUpdate.1) for .Lswitch.table.SystemCoreClockUpdate.1
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.SystemInit) refers to system_tm4c123.o(.text.SystemInit) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.ARM.exidx.text.vPortValidateInterruptPriority) refers to port.o(.text.vPortValidateInterruptPriority) for [Anonymous Symbol]
    heap_1.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.pvPortMalloc.pucAlignedHeap) for pvPortMalloc.pucAlignedHeap
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.ucHeap) for ucHeap
    heap_1.o(.text.pvPortMalloc) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_1.o(.ARM.exidx.text.pvPortMalloc) refers to heap_1.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_1.o(.ARM.exidx.text.vPortFree) refers to heap_1.o(.text.vPortFree) for [Anonymous Symbol]
    heap_1.o(.text.vPortInitialiseBlocks) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_1.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_1.o(.text.xPortGetFreeHeapSize) refers to heap_1.o(.bss.xNextFreeByte) for xNextFreeByte
    heap_1.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_1.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericCreate) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueGenericSend) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvNotifyQueueSetContainer) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvNotifyQueueSetContainer) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGenericSendFromISR) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGiveFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueReceiveFromISR) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueuePeekFromISR) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_1.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateSet) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateSet) refers to queue.o(.text.xQueueCreateSet) for [Anonymous Symbol]
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueAddToSet) refers to queue.o(.text.xQueueAddToSet) for [Anonymous Symbol]
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueRemoveFromSet) refers to queue.o(.text.xQueueRemoveFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queue.o(.ARM.exidx.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueSelectFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueSelectFromSetFromISR) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueSelectFromSetFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueSelectFromSetFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to heap_1.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.xTaskCreate) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.text.xTaskCreate) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.xTaskCreate) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskCreate) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskCreate) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to heap_1.o(.text.vPortFree) for vPortFree
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelayUntil) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.vTaskDelayUntil) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelayUntil) refers to tasks.o(.text.vTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeAll) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxPendedTicks) for uxPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskDelay) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.vTaskDelay) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvIdleTask) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvIdleTask) refers to heap_1.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxPendedTicks) for uxPendedTicks
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskIncrementTick) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskNotifyTake) refers to tasks.o(.text.ulTaskNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskNotifyWait) refers to tasks.o(.text.xTaskNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskNotifyGiveFromISR) refers to tasks.o(.text.vTaskNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskNotifyStateClear) refers to tasks.o(.text.xTaskNotifyStateClear) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.xTimerCreateTimerTask) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.xTimerCreateTimerTask) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(.text.xTimerCreateTimerTask) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvTimerTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvTimerTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvTimerTask) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvTimerTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvTimerTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.text.prvTimerTask) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.prvTimerTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.text.prvTimerTask) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvTimerTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvTimerTask) refers to heap_1.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_1.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerCreate) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreate) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.xTimerCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.xTimerCreate) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.xTimerCreate) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.xTimerCreate) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.xTimerCreate) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(.text.xTimerCreate) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.text.xTimerCreate) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvSampleTimeNow) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvSampleTimeNow) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.prvSampleTimeNow) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    gpio.o(i.GPIOIntRegister) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    gpio.o(i.GPIOIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    gpio.o(i.GPIOIntRegisterPin) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntRegisterPin) refers to interrupt.o(i.IntRegister) for IntRegister
    gpio.o(i.GPIOIntRegisterPin) refers to interrupt.o(i.IntEnable) for IntEnable
    gpio.o(i.GPIOIntUnregister) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    gpio.o(i.GPIOIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    gpio.o(i.GPIOIntUnregisterPin) refers to gpio.o(i._GPIOIntNumberGet) for _GPIOIntNumberGet
    gpio.o(i.GPIOIntUnregisterPin) refers to interrupt.o(i.IntDisable) for IntDisable
    gpio.o(i.GPIOIntUnregisterPin) refers to interrupt.o(i.IntUnregister) for IntUnregister
    gpio.o(i.GPIOPinConfigure) refers to gpio.o(.constdata) for .constdata
    gpio.o(i.GPIOPinTypeADC) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeADC) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeCAN) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeCAN) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeComparator) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeComparator) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeComparatorOutput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeComparatorOutput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeDIVSCLK) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeDIVSCLK) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEPI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEPI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEthernetLED) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEthernetLED) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeEthernetMII) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeEthernetMII) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOInput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeGPIOInput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutput) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutput) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeGPIOOutputOD) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeGPIOOutputOD) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeHibernateRTCCLK) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeHibernateRTCCLK) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeI2C) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeI2C) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeI2CSCL) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeI2CSCL) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeLCD) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeLCD) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeOneWire) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeOneWire) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypePWM) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypePWM) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeQEI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeQEI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeSSI) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeSSI) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeTimer) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeTimer) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeTrace) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeTrace) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUART) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUART) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUSBAnalog) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUSBAnalog) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeUSBDigital) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeUSBDigital) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeWakeHigh) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeWakeHigh) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i.GPIOPinTypeWakeLow) refers to gpio.o(i.GPIODirModeSet) for GPIODirModeSet
    gpio.o(i.GPIOPinTypeWakeLow) refers to gpio.o(i.GPIOPadConfigSet) for GPIOPadConfigSet
    gpio.o(i._GPIOIntNumberGet) refers to gpio.o(.constdata) for .constdata
    interrupt.o(i.IntDisable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntEnable) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntIsEnabled) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntMasterDisable) refers to cpu.o(.emb_text) for CPUcpsid
    interrupt.o(i.IntMasterEnable) refers to cpu.o(.emb_text) for CPUcpsie
    interrupt.o(i.IntPendClear) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPendSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingGet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityGroupingSet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntPriorityMaskGet) refers to cpu.o(.emb_text) for CPUbasepriGet
    interrupt.o(i.IntPriorityMaskSet) refers to cpu.o(.emb_text) for CPUbasepriSet
    interrupt.o(i.IntPrioritySet) refers to interrupt.o(.constdata) for .constdata
    interrupt.o(i.IntRegister) refers to interrupt.o(vtable) for vtable
    interrupt.o(i.IntUnregister) refers to interrupt.o(i._IntDefaultHandler) for _IntDefaultHandler
    interrupt.o(i.IntUnregister) refers to interrupt.o(vtable) for vtable
    sysctl.o(i.SysCtlClockFreqSet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockGet) refers to sysctl.o(.constdata) for .constdata
    sysctl.o(i.SysCtlClockSet) refers to sysctl.o(.emb_text) for SysCtlDelay
    sysctl.o(i.SysCtlDeepSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    sysctl.o(i.SysCtlIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    sysctl.o(i.SysCtlIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    sysctl.o(i.SysCtlSleep) refers to cpu.o(.emb_text) for CPUwfi
    sysctl.o(i.SysCtlVCOGet) refers to sysctl.o(.constdata) for .constdata
    uart.o(i.UARTIntRegister) refers to interrupt.o(i.IntRegister) for IntRegister
    uart.o(i.UARTIntRegister) refers to interrupt.o(i.IntEnable) for IntEnable
    uart.o(i.UARTIntRegister) refers to uart.o(.constdata) for .constdata
    uart.o(i.UARTIntUnregister) refers to interrupt.o(i.IntDisable) for IntDisable
    uart.o(i.UARTIntUnregister) refers to interrupt.o(i.IntUnregister) for IntUnregister
    uart.o(i.UARTIntUnregister) refers to uart.o(.constdata) for .constdata
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_tm4c123.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.text.delay), (2 bytes).
    Removing main.o(.ARM.exidx.text.delay), (8 bytes).
    Removing main.o(.ARM.exidx.text.GPIOF_Handler), (8 bytes).
    Removing main.o(.ARM.exidx.text.initTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.CounterTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.LedTogglerTask), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing system_tm4c123.o(.text), (0 bytes).
    Removing system_tm4c123.o(.text.SystemCoreClockUpdate), (280 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_tm4c123.o(.rodata..Lswitch.table.SystemCoreClockUpdate.1), (92 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (38 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortValidateInterruptPriority), (8 bytes).
    Removing heap_1.o(.text), (0 bytes).
    Removing heap_1.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_1.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_1.o(.text.vPortInitialiseBlocks), (14 bytes).
    Removing heap_1.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_1.o(.text.xPortGetFreeHeapSize), (18 bytes).
    Removing heap_1.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.text.xQueueGenericReset), (126 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (66 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (60 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (66 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (370 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (416 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (198 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (152 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (38 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (42 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (26 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (26 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (30 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing queue.o(.text.xQueueCreateSet), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateSet), (8 bytes).
    Removing queue.o(.text.xQueueAddToSet), (38 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueAddToSet), (8 bytes).
    Removing queue.o(.text.xQueueRemoveFromSet), (40 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueRemoveFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSet), (22 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSetFromISR), (132 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (286 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.text.vTaskDelayUntil), (266 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (134 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (226 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (162 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (192 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (32 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (18 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (38 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (94 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (150 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (62 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (26 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskNotifyTake), (106 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskNotifyWait), (144 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (228 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskNotifyGiveFromISR), (220 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskNotifyStateClear), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskNotifyStateClear), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (158 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommand), (104 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (34 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (26 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (26 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (26 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (46 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (38 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (42 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing gpio.o(i.GPIOADCTriggerDisable), (14 bytes).
    Removing gpio.o(i.GPIOADCTriggerEnable), (12 bytes).
    Removing gpio.o(i.GPIODMATriggerDisable), (14 bytes).
    Removing gpio.o(i.GPIODMATriggerEnable), (12 bytes).
    Removing gpio.o(i.GPIODirModeGet), (34 bytes).
    Removing gpio.o(i.GPIOIntDisable), (14 bytes).
    Removing gpio.o(i.GPIOIntRegisterPin), (30 bytes).
    Removing gpio.o(i.GPIOIntStatus), (14 bytes).
    Removing gpio.o(i.GPIOIntTypeGet), (70 bytes).
    Removing gpio.o(i.GPIOIntUnregister), (22 bytes).
    Removing gpio.o(i.GPIOIntUnregisterPin), (26 bytes).
    Removing gpio.o(i.GPIOPadConfigGet), (248 bytes).
    Removing gpio.o(i.GPIOPinConfigure), (68 bytes).
    Removing gpio.o(i.GPIOPinTypeADC), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeCAN), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeComparator), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeComparatorOutput), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeDIVSCLK), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEPI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEthernetLED), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeEthernetMII), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeGPIOOutputOD), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeHibernateRTCCLK), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeI2C), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeI2CSCL), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeLCD), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeOneWire), (28 bytes).
    Removing gpio.o(i.GPIOPinTypePWM), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeQEI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeSSI), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeTimer), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeTrace), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUSBAnalog), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeUSBDigital), (28 bytes).
    Removing gpio.o(i.GPIOPinTypeWakeHigh), (30 bytes).
    Removing gpio.o(i.GPIOPinTypeWakeLow), (30 bytes).
    Removing gpio.o(i.GPIOPinWakeStatus), (6 bytes).
    Removing interrupt.o(i.IntDisable), (100 bytes).
    Removing interrupt.o(i.IntIsEnabled), (96 bytes).
    Removing interrupt.o(i.IntMasterDisable), (14 bytes).
    Removing interrupt.o(i.IntPendClear), (68 bytes).
    Removing interrupt.o(i.IntPendSet), (84 bytes).
    Removing interrupt.o(i.IntPriorityGet), (28 bytes).
    Removing interrupt.o(i.IntPriorityGroupingGet), (36 bytes).
    Removing interrupt.o(i.IntPriorityGroupingSet), (28 bytes).
    Removing interrupt.o(i.IntPriorityMaskGet), (4 bytes).
    Removing interrupt.o(i.IntPriorityMaskSet), (4 bytes).
    Removing interrupt.o(i.IntTrigger), (12 bytes).
    Removing interrupt.o(i.IntUnregister), (20 bytes).
    Removing interrupt.o(i._IntDefaultHandler), (2 bytes).
    Removing sysctl.o(.emb_text), (6 bytes).
    Removing sysctl.o(i.SysCtlAltClkConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlClockFreqSet), (740 bytes).
    Removing sysctl.o(i.SysCtlClockOutConfig), (20 bytes).
    Removing sysctl.o(i.SysCtlClockSet), (288 bytes).
    Removing sysctl.o(i.SysCtlDeepSleep), (32 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockConfigSet), (112 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepClockSet), (12 bytes).
    Removing sysctl.o(i.SysCtlDeepSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlFlashSectorSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlFlashSizeGet), (56 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBDisable), (28 bytes).
    Removing sysctl.o(i.SysCtlGPIOAHBEnable), (24 bytes).
    Removing sysctl.o(i.SysCtlIntClear), (12 bytes).
    Removing sysctl.o(i.SysCtlIntDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlIntRegister), (20 bytes).
    Removing sysctl.o(i.SysCtlIntStatus), (16 bytes).
    Removing sysctl.o(i.SysCtlIntUnregister), (18 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDODeepSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepGet), (12 bytes).
    Removing sysctl.o(i.SysCtlLDOSleepSet), (12 bytes).
    Removing sysctl.o(i.SysCtlMOSCConfigSet), (12 bytes).
    Removing sysctl.o(i.SysCtlNMIClear), (16 bytes).
    Removing sysctl.o(i.SysCtlNMIStatus), (12 bytes).
    Removing sysctl.o(i.SysCtlPIOSCCalibrate), (76 bytes).
    Removing sysctl.o(i.SysCtlPWMClockGet), (24 bytes).
    Removing sysctl.o(i.SysCtlPWMClockSet), (20 bytes).
    Removing sysctl.o(i.SysCtlPeripheralClockGating), (68 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDeepSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOff), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPowerOn), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralPresent), (44 bytes).
    Removing sysctl.o(i.SysCtlPeripheralReset), (60 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepDisable), (40 bytes).
    Removing sysctl.o(i.SysCtlPeripheralSleepEnable), (40 bytes).
    Removing sysctl.o(i.SysCtlReset), (16 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorGet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetBehaviorSet), (12 bytes).
    Removing sysctl.o(i.SysCtlResetCauseClear), (16 bytes).
    Removing sysctl.o(i.SysCtlResetCauseGet), (12 bytes).
    Removing sysctl.o(i.SysCtlSRAMSizeGet), (16 bytes).
    Removing sysctl.o(i.SysCtlSleep), (4 bytes).
    Removing sysctl.o(i.SysCtlSleepPowerSet), (12 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLDisable), (16 bytes).
    Removing sysctl.o(i.SysCtlUSBPLLEnable), (16 bytes).
    Removing sysctl.o(i.SysCtlVCOGet), (120 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventClear), (16 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventConfig), (12 bytes).
    Removing sysctl.o(i.SysCtlVoltageEventStatus), (12 bytes).
    Removing uart.o(i.UART9BitAddrSend), (38 bytes).
    Removing uart.o(i.UART9BitAddrSet), (10 bytes).
    Removing uart.o(i.UART9BitDisable), (14 bytes).
    Removing uart.o(i.UART9BitEnable), (14 bytes).
    Removing uart.o(i.UARTBreakCtl), (18 bytes).
    Removing uart.o(i.UARTBusy), (8 bytes).
    Removing uart.o(i.UARTCharGet), (12 bytes).
    Removing uart.o(i.UARTCharGetNonBlocking), (16 bytes).
    Removing uart.o(i.UARTCharPutNonBlocking), (16 bytes).
    Removing uart.o(i.UARTCharsAvail), (10 bytes).
    Removing uart.o(i.UARTClockSourceGet), (6 bytes).
    Removing uart.o(i.UARTClockSourceSet), (6 bytes).
    Removing uart.o(i.UARTConfigGetExpClk), (46 bytes).
    Removing uart.o(i.UARTDMADisable), (10 bytes).
    Removing uart.o(i.UARTDMAEnable), (8 bytes).
    Removing uart.o(i.UARTDisableSIR), (10 bytes).
    Removing uart.o(i.UARTEnableSIR), (18 bytes).
    Removing uart.o(i.UARTFIFODisable), (10 bytes).
    Removing uart.o(i.UARTFIFOEnable), (10 bytes).
    Removing uart.o(i.UARTFIFOLevelGet), (16 bytes).
    Removing uart.o(i.UARTFIFOLevelSet), (6 bytes).
    Removing uart.o(i.UARTFlowControlGet), (8 bytes).
    Removing uart.o(i.UARTFlowControlSet), (12 bytes).
    Removing uart.o(i.UARTIntClear), (4 bytes).
    Removing uart.o(i.UARTIntDisable), (10 bytes).
    Removing uart.o(i.UARTIntEnable), (8 bytes).
    Removing uart.o(i.UARTIntRegister), (88 bytes).
    Removing uart.o(i.UARTIntStatus), (10 bytes).
    Removing uart.o(i.UARTIntUnregister), (88 bytes).
    Removing uart.o(i.UARTLoopbackEnable), (10 bytes).
    Removing uart.o(i.UARTModemControlClear), (14 bytes).
    Removing uart.o(i.UARTModemControlGet), (8 bytes).
    Removing uart.o(i.UARTModemControlSet), (12 bytes).
    Removing uart.o(i.UARTModemStatusGet), (10 bytes).
    Removing uart.o(i.UARTParityModeGet), (8 bytes).
    Removing uart.o(i.UARTParityModeSet), (12 bytes).
    Removing uart.o(i.UARTRxErrorClear), (6 bytes).
    Removing uart.o(i.UARTRxErrorGet), (8 bytes).
    Removing uart.o(i.UARTSmartCardDisable), (10 bytes).
    Removing uart.o(i.UARTSmartCardEnable), (22 bytes).
    Removing uart.o(i.UARTSpaceAvail), (10 bytes).
    Removing uart.o(i.UARTTxIntModeGet), (8 bytes).
    Removing uart.o(i.UARTTxIntModeSet), (12 bytes).
    Removing uart.o(.constdata), (128 bytes).

329 unused section(s) (total 11544 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/dczerorl.s                 0x00000000   Number         0  __dczerorl.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    RTE/Device/TM4C123GH6PM/startup_TM4C123.s 0x00000000   Number         0  startup_tm4c123.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    cpu.c                                    0x00000000   Number         0  cpu.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    heap_1.c                                 0x00000000   Number         0  heap_1.o ABSOLUTE
    interrupt.c                              0x00000000   Number         0  interrupt.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    sysctl.c                                 0x00000000   Number         0  sysctl.o ABSOLUTE
    system_TM4C123.c                         0x00000000   Number         0  system_tm4c123.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    uart.c                                   0x00000000   Number         0  uart.o ABSOLUTE
    RESET                                    0x00000000   Section      620  startup_tm4c123.o(RESET)
    !!!main                                  0x0000026c   Section        8  __main.o(!!!main)
    !!!scatter                               0x00000274   Section       52  __scatter.o(!!!scatter)
    !!dczerorl                               0x000002a8   Section       58  __dczerorl.o(!!dczerorl)
    !!handler_zi                             0x000002e4   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x00000300   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x00000302   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x00000306   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x00000306   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x00000308   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x0000030a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x0000030a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x0000030a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x0000030a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x0000030a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x0000030a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x0000030a   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x0000030c   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x0000030c   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x0000030c   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x00000312   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x00000312   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x00000316   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x00000316   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0000031e   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000320   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000320   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000324   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    $v0                                      0x0000032c   Number         0  cpu.o(.emb_text)
    .emb_text                                0x0000032c   Section       38  cpu.o(.emb_text)
    $v0                                      0x00000354   Number         0  startup_tm4c123.o(.text)
    .text                                    0x00000354   Section      276  startup_tm4c123.o(.text)
    .text                                    0x00000468   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x000004f2   Section        0  heapauxi.o(.text)
    .text                                    0x000004f8   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x0000055c   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x000005a6   Section        0  exit.o(.text)
    .text                                    0x000005b8   Section        8  libspace.o(.text)
    .text                                    0x000005c0   Section        0  sys_exit.o(.text)
    .text                                    0x000005cc   Section        2  use_no_semi.o(.text)
    .text                                    0x000005ce   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x000005d0   Section        0  main.o(.text.CounterTask)
    [Anonymous Symbol]                       0x00000680   Section        0  main.o(.text.GPIOF_Handler)
    [Anonymous Symbol]                       0x000006c4   Section        0  main.o(.text.LedTogglerTask)
    [Anonymous Symbol]                       0x00000780   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x000007e0   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x000007f0   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x00000810   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x00000814   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x00000844   Section        0  system_tm4c123.o(.text.SystemInit)
    [Anonymous Symbol]                       0x000008b4   Section        0  main.o(.text.initTask)
    [Anonymous Symbol]                       0x00000990   Section        0  main.o(.text.main)
    prvAddCurrentTaskToDelayedList           0x00000a1d   Thumb Code   166  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x00000a1c   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvIdleTask                              0x00000ac5   Thumb Code   118  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x00000ac4   Section        0  tasks.o(.text.prvIdleTask)
    prvNotifyQueueSetContainer               0x00000b3d   Thumb Code   222  queue.o(.text.prvNotifyQueueSetContainer)
    [Anonymous Symbol]                       0x00000b3c   Section        0  queue.o(.text.prvNotifyQueueSetContainer)
    prvPortStartFirstTask                    0x00000c1d   Thumb Code    34  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x00000c1c   Section        0  port.o(.text.prvPortStartFirstTask)
    prvSampleTimeNow                         0x00000c45   Thumb Code   230  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x00000c44   Section        0  timers.o(.text.prvSampleTimeNow)
    prvTaskExitError                         0x00000d2d   Thumb Code    50  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x00000d2c   Section        0  port.o(.text.prvTaskExitError)
    prvTimerTask                             0x00000d61   Thumb Code   634  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x00000d60   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x00000fdd   Thumb Code   136  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00000fdc   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00001064   Section        0  heap_1.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x000010c0   Section        0  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x000010d8   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x00001100   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x00001124   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x0000113c   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x00001144   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x00001180   Section        0  list.o(.text.vListInsertEnd)
    vPortEnableVFP                           0x0000119d   Thumb Code    14  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x0000119c   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x000011b0   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x000011f8   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x00001228   Section        0  heap_1.o(.text.vPortFree)
    [Anonymous Symbol]                       0x00001244   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x00001278   Section        0  port.o(.text.vPortValidateInterruptPriority)
    [Anonymous Symbol]                       0x000012dc   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x00001324   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x000013e8   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x00001404   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x00001414   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x0000144c   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x0000148c   Section        0  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x00001554   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x000015ec   Section        0  tasks.o(.text.vTaskSuspend)
    [Anonymous Symbol]                       0x00001780   Section        0  tasks.o(.text.vTaskSuspendAll)
    [Anonymous Symbol]                       0x00001790   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00001818   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x0000194c   Section        0  queue.o(.text.xQueueCreateMutex)
    [Anonymous Symbol]                       0x00001974   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x000019f4   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x00001c2c   Section        0  queue.o(.text.xQueueGiveFromISR)
    [Anonymous Symbol]                       0x00001d14   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x00001ebc   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x000020a0   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x00002130   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x00002300   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x00002328   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x00002334   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x000024b4   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x00002568   Section        0  tasks.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x0000261c   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x000026ac   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x000027e8   Section        0  timers.o(.text.xTimerCreateTimerTask)
    i.GPIODirModeSet                         0x0000288c   Section        0  gpio.o(i.GPIODirModeSet)
    i.GPIOIntClear                           0x000028b4   Section        0  gpio.o(i.GPIOIntClear)
    i.GPIOIntEnable                          0x000028ba   Section        0  gpio.o(i.GPIOIntEnable)
    i.GPIOIntRegister                        0x000028c6   Section        0  gpio.o(i.GPIOIntRegister)
    i.GPIOIntTypeSet                         0x000028e0   Section        0  gpio.o(i.GPIOIntTypeSet)
    i.GPIOPadConfigSet                       0x00002930   Section        0  gpio.o(i.GPIOPadConfigSet)
    i.GPIOPinRead                            0x00002aa0   Section        0  gpio.o(i.GPIOPinRead)
    i.GPIOPinTypeGPIOInput                   0x00002aa6   Section        0  gpio.o(i.GPIOPinTypeGPIOInput)
    i.GPIOPinTypeGPIOOutput                  0x00002ac2   Section        0  gpio.o(i.GPIOPinTypeGPIOOutput)
    i.GPIOPinTypeUART                        0x00002ade   Section        0  gpio.o(i.GPIOPinTypeUART)
    i.GPIOPinWrite                           0x00002afa   Section        0  gpio.o(i.GPIOPinWrite)
    i.GPIOUnlockPin                          0x00002b00   Section        0  gpio.o(i.GPIOUnlockPin)
    i.IntEnable                              0x00002b18   Section        0  interrupt.o(i.IntEnable)
    i.IntMasterEnable                        0x00002b7c   Section        0  interrupt.o(i.IntMasterEnable)
    i.IntPrioritySet                         0x00002b8c   Section        0  interrupt.o(i.IntPrioritySet)
    i.IntRegister                            0x00002bb4   Section        0  interrupt.o(i.IntRegister)
    i.SysCtlClockGet                         0x00002be8   Section        0  sysctl.o(i.SysCtlClockGet)
    i.SysCtlPeripheralEnable                 0x00002d3c   Section        0  sysctl.o(i.SysCtlPeripheralEnable)
    i.SysCtlPeripheralReady                  0x00002d64   Section        0  sysctl.o(i.SysCtlPeripheralReady)
    i.UARTCharPut                            0x00002d90   Section        0  uart.o(i.UARTCharPut)
    i.UARTConfigSetExpClk                    0x00002d9c   Section        0  uart.o(i.UARTConfigSetExpClk)
    i.UARTDisable                            0x00002e0a   Section        0  uart.o(i.UARTDisable)
    i.UARTEnable                             0x00002e28   Section        0  uart.o(i.UARTEnable)
    _GPIOIntNumberGet                        0x00002e3d   Thumb Code    62  gpio.o(i._GPIOIntNumberGet)
    i._GPIOIntNumberGet                      0x00002e3c   Section        0  gpio.o(i._GPIOIntNumberGet)
    $v0                                      0x00002e8c   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x00002e8c   Section       26  fpinit.o(x$fpl$fpinit)
    g_ppui32GPIOIntMapBlizzard               0x00002ea8   Data         192  gpio.o(.constdata)
    .constdata                               0x00002ea8   Section      552  gpio.o(.constdata)
    g_ppui32GPIOIntMapSnowflake              0x00002f68   Data         216  gpio.o(.constdata)
    g_pui32GPIOBaseAddrs                     0x00003040   Data         144  gpio.o(.constdata)
    g_pui32Priority                          0x000030d0   Data          32  interrupt.o(.constdata)
    .constdata                               0x000030d0   Section      268  interrupt.o(.constdata)
    g_pui32Regs                              0x000030f0   Data         156  interrupt.o(.constdata)
    g_pui32EnRegs                            0x0000318c   Data          20  interrupt.o(.constdata)
    g_pui32Dii16Regs                         0x000031a0   Data          20  interrupt.o(.constdata)
    g_pui32PendRegs                          0x000031b4   Data          20  interrupt.o(.constdata)
    g_pui32UnpendRegs                        0x000031c8   Data          20  interrupt.o(.constdata)
    g_pui32VCOFrequencies                    0x000031dc   Data           8  sysctl.o(.constdata)
    .constdata                               0x000031dc   Section      596  sysctl.o(.constdata)
    g_pui32Xtals                             0x000031e4   Data         108  sysctl.o(.constdata)
    g_pppui32XTALtoVCO                       0x00003250   Data         432  sysctl.o(.constdata)
    g_sXTALtoMEMTIM                          0x00003400   Data          48  sysctl.o(.constdata)
    .L.str                                   0x00003430   Data           5  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00003430   Section        0  main.o(.rodata.str1.1)
    uxCriticalNesting                        0x20000004   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000004   Section        0  port.o(.data.uxCriticalNesting)
    g_pfnRAMVectors                          0x20000400   Data         620  interrupt.o(vtable)
    vtable                                   0x20000400   Section      620  interrupt.o(vtable)
    .bss                                     0x20000670   Section       96  libspace.o(.bss)
    prvSampleTimeNow.xLastTime               0x200006d4   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x200006d4   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    pvPortMalloc.pucAlignedHeap              0x200006d8   Data           4  heap_1.o(.bss.pvPortMalloc.pucAlignedHeap)
    [Anonymous Symbol]                       0x200006d8   Section        0  heap_1.o(.bss.pvPortMalloc.pucAlignedHeap)
    pxCurrentTimerList                       0x200006e0   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x200006e0   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x200006e4   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x200006e4   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxOverflowDelayedTaskList                0x200006e8   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x200006e8   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x200006ec   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x200006ec   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x200006f0   Data         100  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x200006f0   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x20000758   Data        8192  heap_1.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20000758   Section        0  heap_1.o(.bss.ucHeap)
    ucMaxSysCallPriority                     0x20002758   Data           1  port.o(.bss.ucMaxSysCallPriority)
    [Anonymous Symbol]                       0x20002758   Section        0  port.o(.bss.ucMaxSysCallPriority)
    ulMaxPRIGROUPValue                       0x2000275c   Data           4  port.o(.bss.ulMaxPRIGROUPValue)
    [Anonymous Symbol]                       0x2000275c   Section        0  port.o(.bss.ulMaxPRIGROUPValue)
    uxCurrentNumberOfTasks                   0x20002760   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20002760   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x20002764   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x20002764   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxPendedTicks                            0x20002768   Data           4  tasks.o(.bss.uxPendedTicks)
    [Anonymous Symbol]                       0x20002768   Section        0  tasks.o(.bss.uxPendedTicks)
    uxSchedulerSuspended                     0x2000276c   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x2000276c   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x20002770   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x20002770   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20002774   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20002774   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xActiveTimerList1                        0x20002778   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x20002778   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x2000278c   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x2000278c   Section        0  timers.o(.bss.xActiveTimerList2)
    xDelayedTaskList1                        0x200027a0   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x200027a0   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x200027b4   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x200027b4   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xIdleTaskHandle                          0x200027c8   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x200027c8   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xNextFreeByte                            0x200027cc   Data           4  heap_1.o(.bss.xNextFreeByte)
    [Anonymous Symbol]                       0x200027cc   Section        0  heap_1.o(.bss.xNextFreeByte)
    xNextTaskUnblockTime                     0x200027d0   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x200027d0   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x200027d4   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x200027d4   Section        0  tasks.o(.bss.xNumOfOverflows)
    xPendingReadyList                        0x200027d8   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x200027d8   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x200027ec   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x200027ec   Section        0  tasks.o(.bss.xSchedulerRunning)
    xSuspendedTaskList                       0x200027f0   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x200027f0   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20002804   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20002804   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20002818   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20002818   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x2000281c   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x2000281c   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x20002820   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x20002820   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x20002824   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20002824   Section        0  tasks.o(.bss.xYieldPending)
    Heap_Mem                                 0x20002828   Data           0  startup_tm4c123.o(HEAP)
    Stack_Mem                                0x20002828   Data         512  startup_tm4c123.o(STACK)
    HEAP                                     0x20002828   Section        0  startup_tm4c123.o(HEAP)
    STACK                                    0x20002828   Section      512  startup_tm4c123.o(STACK)
    __initial_sp                             0x20002a28   Data           0  startup_tm4c123.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_tm4c123.o(RESET)
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_End                            0x0000026c   Data           0  startup_tm4c123.o(RESET)
    __Vectors_Size                           0x0000026c   Number         0  startup_tm4c123.o ABSOLUTE
    __main                                   0x0000026d   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x00000275   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x00000275   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x00000283   Thumb Code     0  __scatter.o(!!!scatter)
    __decompress                             0x000002a9   Thumb Code    58  __dczerorl.o(!!dczerorl)
    __decompress0                            0x000002a9   Thumb Code     0  __dczerorl.o(!!dczerorl)
    __scatterload_zeroinit                   0x000002e5   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x00000301   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x00000303   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_trap_1                  0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x00000307   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x00000309   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x0000030b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x0000030d   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x0000030d   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x0000030d   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x00000313   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x00000313   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x00000317   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x00000317   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0000031f   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000321   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000321   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000325   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    CPUcpsid                                 0x0000032d   Thumb Code     8  cpu.o(.emb_text)
    CPUprimask                               0x00000335   Thumb Code     6  cpu.o(.emb_text)
    CPUcpsie                                 0x0000033b   Thumb Code     8  cpu.o(.emb_text)
    CPUwfi                                   0x00000343   Thumb Code     4  cpu.o(.emb_text)
    CPUbasepriSet                            0x00000347   Thumb Code     6  cpu.o(.emb_text)
    CPUbasepriGet                            0x0000034d   Thumb Code     6  cpu.o(.emb_text)
    Reset_Handler                            0x00000355   Thumb Code     8  startup_tm4c123.o(.text)
    NMI_Handler                              0x0000035d   Thumb Code     2  startup_tm4c123.o(.text)
    HardFault_Handler                        0x0000035f   Thumb Code     2  startup_tm4c123.o(.text)
    MemManage_Handler                        0x00000361   Thumb Code     2  startup_tm4c123.o(.text)
    BusFault_Handler                         0x00000363   Thumb Code     2  startup_tm4c123.o(.text)
    UsageFault_Handler                       0x00000365   Thumb Code     2  startup_tm4c123.o(.text)
    DebugMon_Handler                         0x00000369   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOA_Handler                            0x0000036f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOB_Handler                            0x00000371   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOC_Handler                            0x00000373   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOD_Handler                            0x00000375   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOE_Handler                            0x00000377   Thumb Code     2  startup_tm4c123.o(.text)
    UART0_Handler                            0x00000379   Thumb Code     2  startup_tm4c123.o(.text)
    UART1_Handler                            0x0000037b   Thumb Code     2  startup_tm4c123.o(.text)
    SSI0_Handler                             0x0000037d   Thumb Code     2  startup_tm4c123.o(.text)
    I2C0_Handler                             0x0000037f   Thumb Code     2  startup_tm4c123.o(.text)
    PMW0_FAULT_Handler                       0x00000381   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_0_Handler                           0x00000383   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_1_Handler                           0x00000385   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_2_Handler                           0x00000387   Thumb Code     2  startup_tm4c123.o(.text)
    QEI0_Handler                             0x00000389   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS0_Handler                          0x0000038b   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS1_Handler                          0x0000038d   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS2_Handler                          0x0000038f   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS3_Handler                          0x00000391   Thumb Code     2  startup_tm4c123.o(.text)
    WDT0_Handler                             0x00000393   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0A_Handler                          0x00000395   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0B_Handler                          0x00000397   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1A_Handler                          0x00000399   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1B_Handler                          0x0000039b   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2A_Handler                          0x0000039d   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2B_Handler                          0x0000039f   Thumb Code     2  startup_tm4c123.o(.text)
    COMP0_Handler                            0x000003a1   Thumb Code     2  startup_tm4c123.o(.text)
    COMP1_Handler                            0x000003a3   Thumb Code     2  startup_tm4c123.o(.text)
    COMP2_Handler                            0x000003a5   Thumb Code     2  startup_tm4c123.o(.text)
    SYSCTL_Handler                           0x000003a7   Thumb Code     2  startup_tm4c123.o(.text)
    FLASH_Handler                            0x000003a9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOG_Handler                            0x000003ad   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOH_Handler                            0x000003af   Thumb Code     2  startup_tm4c123.o(.text)
    UART2_Handler                            0x000003b1   Thumb Code     2  startup_tm4c123.o(.text)
    SSI1_Handler                             0x000003b3   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3A_Handler                          0x000003b5   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3B_Handler                          0x000003b7   Thumb Code     2  startup_tm4c123.o(.text)
    I2C1_Handler                             0x000003b9   Thumb Code     2  startup_tm4c123.o(.text)
    QEI1_Handler                             0x000003bb   Thumb Code     2  startup_tm4c123.o(.text)
    CAN0_Handler                             0x000003bd   Thumb Code     2  startup_tm4c123.o(.text)
    CAN1_Handler                             0x000003bf   Thumb Code     2  startup_tm4c123.o(.text)
    CAN2_Handler                             0x000003c1   Thumb Code     2  startup_tm4c123.o(.text)
    HIB_Handler                              0x000003c3   Thumb Code     2  startup_tm4c123.o(.text)
    USB0_Handler                             0x000003c5   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_3_Handler                           0x000003c7   Thumb Code     2  startup_tm4c123.o(.text)
    UDMA_Handler                             0x000003c9   Thumb Code     2  startup_tm4c123.o(.text)
    UDMAERR_Handler                          0x000003cb   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS0_Handler                          0x000003cd   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS1_Handler                          0x000003cf   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS2_Handler                          0x000003d1   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS3_Handler                          0x000003d3   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOJ_Handler                            0x000003d5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOK_Handler                            0x000003d7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOL_Handler                            0x000003d9   Thumb Code     2  startup_tm4c123.o(.text)
    SSI2_Handler                             0x000003db   Thumb Code     2  startup_tm4c123.o(.text)
    SSI3_Handler                             0x000003dd   Thumb Code     2  startup_tm4c123.o(.text)
    UART3_Handler                            0x000003df   Thumb Code     2  startup_tm4c123.o(.text)
    UART4_Handler                            0x000003e1   Thumb Code     2  startup_tm4c123.o(.text)
    UART5_Handler                            0x000003e3   Thumb Code     2  startup_tm4c123.o(.text)
    UART6_Handler                            0x000003e5   Thumb Code     2  startup_tm4c123.o(.text)
    UART7_Handler                            0x000003e7   Thumb Code     2  startup_tm4c123.o(.text)
    I2C2_Handler                             0x000003e9   Thumb Code     2  startup_tm4c123.o(.text)
    I2C3_Handler                             0x000003eb   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4A_Handler                          0x000003ed   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4B_Handler                          0x000003ef   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5A_Handler                          0x000003f1   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5B_Handler                          0x000003f3   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0A_Handler                         0x000003f5   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0B_Handler                         0x000003f7   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1A_Handler                         0x000003f9   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1B_Handler                         0x000003fb   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2A_Handler                         0x000003fd   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2B_Handler                         0x000003ff   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3A_Handler                         0x00000401   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3B_Handler                         0x00000403   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4A_Handler                         0x00000405   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4B_Handler                         0x00000407   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5A_Handler                         0x00000409   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5B_Handler                         0x0000040b   Thumb Code     2  startup_tm4c123.o(.text)
    FPU_Handler                              0x0000040d   Thumb Code     2  startup_tm4c123.o(.text)
    I2C4_Handler                             0x0000040f   Thumb Code     2  startup_tm4c123.o(.text)
    I2C5_Handler                             0x00000411   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOM_Handler                            0x00000413   Thumb Code     2  startup_tm4c123.o(.text)
    GPION_Handler                            0x00000415   Thumb Code     2  startup_tm4c123.o(.text)
    QEI2_Handler                             0x00000417   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP0_Handler                           0x00000419   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP1_Handler                           0x0000041b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP2_Handler                           0x0000041d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP3_Handler                           0x0000041f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP4_Handler                           0x00000421   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP5_Handler                           0x00000423   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP6_Handler                           0x00000425   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP7_Handler                           0x00000427   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ0_Handler                           0x00000429   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ1_Handler                           0x0000042b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ2_Handler                           0x0000042d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ3_Handler                           0x0000042f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ4_Handler                           0x00000431   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ5_Handler                           0x00000433   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ6_Handler                           0x00000435   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ7_Handler                           0x00000437   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOR_Handler                            0x00000439   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOS_Handler                            0x0000043b   Thumb Code     2  startup_tm4c123.o(.text)
    PMW1_0_Handler                           0x0000043d   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_1_Handler                           0x0000043f   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_2_Handler                           0x00000441   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_3_Handler                           0x00000443   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_FAULT_Handler                       0x00000445   Thumb Code     2  startup_tm4c123.o(.text)
    __user_initial_stackheap                 0x00000449   Thumb Code     0  startup_tm4c123.o(.text)
    __aeabi_memcpy                           0x00000469   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x00000469   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x000004cf   Thumb Code     0  rt_memcpy_v6.o(.text)
    __use_two_region_memory                  0x000004f3   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x000004f5   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x000004f7   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x000004f9   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x000004f9   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x000004f9   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x00000541   Thumb Code     0  rt_memcpy_w.o(.text)
    __user_setup_stackheap                   0x0000055d   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x000005a7   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x000005b9   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x000005b9   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x000005b9   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x000005c1   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x000005cd   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x000005cd   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x000005cf   Thumb Code     0  indicate_semi.o(.text)
    CounterTask                              0x000005d1   Thumb Code   152  main.o(.text.CounterTask)
    GPIOF_Handler                            0x00000681   Thumb Code    68  main.o(.text.GPIOF_Handler)
    LedTogglerTask                           0x000006c5   Thumb Code   152  main.o(.text.LedTogglerTask)
    PendSV_Handler                           0x00000781   Thumb Code   100  port.o(.text.PendSV_Handler)
    SVC_Handler                              0x000007f1   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x00000815   Thumb Code    46  port.o(.text.SysTick_Handler)
    SystemInit                               0x00000845   Thumb Code   112  system_tm4c123.o(.text.SystemInit)
    initTask                                 0x000008b5   Thumb Code   220  main.o(.text.initTask)
    main                                     0x00000991   Thumb Code   138  main.o(.text.main)
    pvPortMalloc                             0x00001065   Thumb Code    90  heap_1.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x000010c1   Thumb Code    24  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x000010d9   Thumb Code    40  port.o(.text.pxPortInitialiseStack)
    uxListRemove                             0x00001101   Thumb Code    36  list.o(.text.uxListRemove)
    vListInitialise                          0x00001125   Thumb Code    22  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x0000113d   Thumb Code     6  list.o(.text.vListInitialiseItem)
    vListInsert                              0x00001145   Thumb Code    58  list.o(.text.vListInsert)
    vListInsertEnd                           0x00001181   Thumb Code    28  list.o(.text.vListInsertEnd)
    vPortEnterCritical                       0x000011b1   Thumb Code    70  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x000011f9   Thumb Code    46  port.o(.text.vPortExitCritical)
    vPortFree                                0x00001229   Thumb Code    26  heap_1.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x00001245   Thumb Code    52  port.o(.text.vPortSetupTimerInterrupt)
    vPortValidateInterruptPriority           0x00001279   Thumb Code    98  port.o(.text.vPortValidateInterruptPriority)
    vQueueWaitForMessageRestricted           0x000012dd   Thumb Code    70  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskDelay                               0x00001325   Thumb Code   194  tasks.o(.text.vTaskDelay)
    vTaskInternalSetTimeOutState             0x000013e9   Thumb Code    26  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x00001405   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x00001415   Thumb Code    54  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x0000144d   Thumb Code    62  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskPriorityDisinheritAfterTimeout      0x0000148d   Thumb Code   198  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskStartScheduler                      0x00001555   Thumb Code   144  tasks.o(.text.vTaskStartScheduler)
    vTaskSuspend                             0x000015ed   Thumb Code   402  tasks.o(.text.vTaskSuspend)
    vTaskSuspendAll                          0x00001781   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x00001791   Thumb Code   134  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x00001819   Thumb Code   306  port.o(.text.xPortStartScheduler)
    xQueueCreateMutex                        0x0000194d   Thumb Code    40  queue.o(.text.xQueueCreateMutex)
    xQueueGenericCreate                      0x00001975   Thumb Code   126  queue.o(.text.xQueueGenericCreate)
    xQueueGenericSend                        0x000019f5   Thumb Code   568  queue.o(.text.xQueueGenericSend)
    xQueueGiveFromISR                        0x00001c2d   Thumb Code   230  queue.o(.text.xQueueGiveFromISR)
    xQueueReceive                            0x00001d15   Thumb Code   424  queue.o(.text.xQueueReceive)
    xQueueSemaphoreTake                      0x00001ebd   Thumb Code   482  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x000020a1   Thumb Code   142  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x00002131   Thumb Code   462  tasks.o(.text.xTaskCreate)
    xTaskGetSchedulerState                   0x00002301   Thumb Code    38  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x00002329   Thumb Code    12  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x00002335   Thumb Code   384  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x000024b5   Thumb Code   178  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x00002569   Thumb Code   178  tasks.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x0000261d   Thumb Code   144  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x000026ad   Thumb Code   316  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x000027e9   Thumb Code   156  timers.o(.text.xTimerCreateTimerTask)
    GPIODirModeSet                           0x0000288d   Thumb Code    40  gpio.o(i.GPIODirModeSet)
    GPIOIntClear                             0x000028b5   Thumb Code     6  gpio.o(i.GPIOIntClear)
    GPIOIntEnable                            0x000028bb   Thumb Code    12  gpio.o(i.GPIOIntEnable)
    GPIOIntRegister                          0x000028c7   Thumb Code    26  gpio.o(i.GPIOIntRegister)
    GPIOIntTypeSet                           0x000028e1   Thumb Code    80  gpio.o(i.GPIOIntTypeSet)
    GPIOPadConfigSet                         0x00002931   Thumb Code   354  gpio.o(i.GPIOPadConfigSet)
    GPIOPinRead                              0x00002aa1   Thumb Code     6  gpio.o(i.GPIOPinRead)
    GPIOPinTypeGPIOInput                     0x00002aa7   Thumb Code    28  gpio.o(i.GPIOPinTypeGPIOInput)
    GPIOPinTypeGPIOOutput                    0x00002ac3   Thumb Code    28  gpio.o(i.GPIOPinTypeGPIOOutput)
    GPIOPinTypeUART                          0x00002adf   Thumb Code    28  gpio.o(i.GPIOPinTypeUART)
    GPIOPinWrite                             0x00002afb   Thumb Code     6  gpio.o(i.GPIOPinWrite)
    GPIOUnlockPin                            0x00002b01   Thumb Code    18  gpio.o(i.GPIOUnlockPin)
    IntEnable                                0x00002b19   Thumb Code    92  interrupt.o(i.IntEnable)
    IntMasterEnable                          0x00002b7d   Thumb Code    14  interrupt.o(i.IntMasterEnable)
    IntPrioritySet                           0x00002b8d   Thumb Code    36  interrupt.o(i.IntPrioritySet)
    IntRegister                              0x00002bb5   Thumb Code    44  interrupt.o(i.IntRegister)
    SysCtlClockGet                           0x00002be9   Thumb Code   304  sysctl.o(i.SysCtlClockGet)
    SysCtlPeripheralEnable                   0x00002d3d   Thumb Code    36  sysctl.o(i.SysCtlPeripheralEnable)
    SysCtlPeripheralReady                    0x00002d65   Thumb Code    40  sysctl.o(i.SysCtlPeripheralReady)
    UARTCharPut                              0x00002d91   Thumb Code    12  uart.o(i.UARTCharPut)
    UARTConfigSetExpClk                      0x00002d9d   Thumb Code   110  uart.o(i.UARTConfigSetExpClk)
    UARTDisable                              0x00002e0b   Thumb Code    30  uart.o(i.UARTDisable)
    UARTEnable                               0x00002e29   Thumb Code    20  uart.o(i.UARTEnable)
    _fp_init                                 0x00002e8d   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x00002ea5   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x00002ea5   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    Region$$Table$$Base                      0x00003438   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00003458   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_tm4c123.o(.data.SystemCoreClock)
    __libspace_start                         0x20000670   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x200006d0   Data           0  libspace.o(.bss)
    mutex                                    0x200006d0   Data           4  main.o(.bss.mutex)
    pxCurrentTCB                             0x200006dc   Data           4  tasks.o(.bss.pxCurrentTCB)
    semaphore                                0x20000754   Data           4  main.o(.bss.semaphore)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000355

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00003e70, Max: 0x00040000, ABSOLUTE, COMPRESSED[0x00003818])

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00003458, Max: 0x00040000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x0000026c   Data   RO           27    RESET               startup_tm4c123.o
    0x0000026c   0x0000026c   0x00000008   Code   RO         1458  * !!!main             c_w.l(__main.o)
    0x00000274   0x00000274   0x00000034   Code   RO         1627    !!!scatter          c_w.l(__scatter.o)
    0x000002a8   0x000002a8   0x0000003a   Code   RO         1625    !!dczerorl          c_w.l(__dczerorl.o)
    0x000002e2   0x000002e2   0x00000002   PAD
    0x000002e4   0x000002e4   0x0000001c   Code   RO         1629    !!handler_zi        c_w.l(__scatter_zi.o)
    0x00000300   0x00000300   0x00000002   Code   RO         1487    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x00000302   0x00000302   0x00000004   Code   RO         1493    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1496    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1498    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1501    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1503    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1505    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1508    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1510    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1512    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1514    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1516    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1518    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1520    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1522    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1524    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1526    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1528    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1532    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1534    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1536    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000000   Code   RO         1538    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x00000306   0x00000306   0x00000002   Code   RO         1539    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x00000308   0x00000308   0x00000002   Code   RO         1561    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x0000030a   0x0000030a   0x00000000   Code   RO         1576    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x0000030a   0x0000030a   0x00000000   Code   RO         1578    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x0000030a   0x0000030a   0x00000000   Code   RO         1581    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x0000030a   0x0000030a   0x00000000   Code   RO         1584    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x0000030a   0x0000030a   0x00000000   Code   RO         1586    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x0000030a   0x0000030a   0x00000000   Code   RO         1589    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x0000030a   0x0000030a   0x00000002   Code   RO         1590    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x0000030c   0x0000030c   0x00000000   Code   RO         1460    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x0000030c   0x0000030c   0x00000000   Code   RO         1464    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x0000030c   0x0000030c   0x00000006   Code   RO         1476    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x00000312   0x00000312   0x00000000   Code   RO         1466    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x00000312   0x00000312   0x00000004   Code   RO         1467    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x00000316   0x00000316   0x00000000   Code   RO         1469    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x00000316   0x00000316   0x00000008   Code   RO         1470    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0000031e   0x0000031e   0x00000002   Code   RO         1491    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x00000320   0x00000320   0x00000000   Code   RO         1541    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x00000320   0x00000320   0x00000004   Code   RO         1542    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x00000324   0x00000324   0x00000006   Code   RO         1543    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0000032a   0x0000032a   0x00000002   PAD
    0x0000032c   0x0000032c   0x00000026   Code   RO         1442    .emb_text           driverlib.lib(cpu.o)
    0x00000352   0x00000352   0x00000002   PAD
    0x00000354   0x00000354   0x00000114   Code   RO           28  * .text               startup_tm4c123.o
    0x00000468   0x00000468   0x0000008a   Code   RO         1454    .text               c_w.l(rt_memcpy_v6.o)
    0x000004f2   0x000004f2   0x00000006   Code   RO         1456    .text               c_w.l(heapauxi.o)
    0x000004f8   0x000004f8   0x00000064   Code   RO         1461    .text               c_w.l(rt_memcpy_w.o)
    0x0000055c   0x0000055c   0x0000004a   Code   RO         1478    .text               c_w.l(sys_stackheap_outer.o)
    0x000005a6   0x000005a6   0x00000012   Code   RO         1480    .text               c_w.l(exit.o)
    0x000005b8   0x000005b8   0x00000008   Code   RO         1488    .text               c_w.l(libspace.o)
    0x000005c0   0x000005c0   0x0000000c   Code   RO         1551    .text               c_w.l(sys_exit.o)
    0x000005cc   0x000005cc   0x00000002   Code   RO         1566    .text               c_w.l(use_no_semi.o)
    0x000005ce   0x000005ce   0x00000000   Code   RO         1568    .text               c_w.l(indicate_semi.o)
    0x000005ce   0x000005ce   0x00000002   PAD
    0x000005d0   0x000005d0   0x000000b0   Code   RO            8    .text.CounterTask   main.o
    0x00000680   0x00000680   0x00000044   Code   RO            4    .text.GPIOF_Handler  main.o
    0x000006c4   0x000006c4   0x000000b4   Code   RO           10    .text.LedTogglerTask  main.o
    0x00000778   0x00000778   0x00000008   PAD
    0x00000780   0x00000780   0x00000064   Code   RO           88    .text.PendSV_Handler  port.o
    0x000007e4   0x000007e4   0x0000000c   PAD
    0x000007f0   0x000007f0   0x00000024   Code   RO           72    .text.SVC_Handler   port.o
    0x00000814   0x00000814   0x0000002e   Code   RO           90    .text.SysTick_Handler  port.o
    0x00000842   0x00000842   0x00000002   PAD
    0x00000844   0x00000844   0x00000070   Code   RO           37    .text.SystemInit    system_tm4c123.o
    0x000008b4   0x000008b4   0x000000dc   Code   RO            6    .text.initTask      main.o
    0x00000990   0x00000990   0x0000008a   Code   RO           12    .text.main          main.o
    0x00000a1a   0x00000a1a   0x00000002   PAD
    0x00000a1c   0x00000a1c   0x000000a6   Code   RO          196    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x00000ac2   0x00000ac2   0x00000002   PAD
    0x00000ac4   0x00000ac4   0x00000076   Code   RO          220    .text.prvIdleTask   tasks.o
    0x00000b3a   0x00000b3a   0x00000002   PAD
    0x00000b3c   0x00000b3c   0x000000de   Code   RO          140    .text.prvNotifyQueueSetContainer  queue.o
    0x00000c1a   0x00000c1a   0x00000002   PAD
    0x00000c1c   0x00000c1c   0x00000028   Code   RO           80    .text.prvPortStartFirstTask  port.o
    0x00000c44   0x00000c44   0x000000e6   Code   RO          329    .text.prvSampleTimeNow  timers.o
    0x00000d2a   0x00000d2a   0x00000002   PAD
    0x00000d2c   0x00000d2c   0x00000032   Code   RO           70    .text.prvTaskExitError  port.o
    0x00000d5e   0x00000d5e   0x00000002   PAD
    0x00000d60   0x00000d60   0x0000027a   Code   RO          309    .text.prvTimerTask  timers.o
    0x00000fda   0x00000fda   0x00000002   PAD
    0x00000fdc   0x00000fdc   0x00000088   Code   RO          142    .text.prvUnlockQueue  queue.o
    0x00001064   0x00001064   0x0000005a   Code   RO          105    .text.pvPortMalloc  heap_1.o
    0x000010be   0x000010be   0x00000002   PAD
    0x000010c0   0x000010c0   0x00000018   Code   RO          264    .text.pvTaskIncrementMutexHeldCount  tasks.o
    0x000010d8   0x000010d8   0x00000028   Code   RO           68    .text.pxPortInitialiseStack  port.o
    0x00001100   0x00001100   0x00000024   Code   RO           58    .text.uxListRemove  list.o
    0x00001124   0x00001124   0x00000016   Code   RO           50    .text.vListInitialise  list.o
    0x0000113a   0x0000113a   0x00000002   PAD
    0x0000113c   0x0000113c   0x00000006   Code   RO           52    .text.vListInitialiseItem  list.o
    0x00001142   0x00001142   0x00000002   PAD
    0x00001144   0x00001144   0x0000003a   Code   RO           56    .text.vListInsert   list.o
    0x0000117e   0x0000117e   0x00000002   PAD
    0x00001180   0x00001180   0x0000001c   Code   RO           54    .text.vListInsertEnd  list.o
    0x0000119c   0x0000119c   0x00000014   Code   RO           78    .text.vPortEnableVFP  port.o
    0x000011b0   0x000011b0   0x00000046   Code   RO           84    .text.vPortEnterCritical  port.o
    0x000011f6   0x000011f6   0x00000002   PAD
    0x000011f8   0x000011f8   0x0000002e   Code   RO           86    .text.vPortExitCritical  port.o
    0x00001226   0x00001226   0x00000002   PAD
    0x00001228   0x00001228   0x0000001a   Code   RO          107    .text.vPortFree     heap_1.o
    0x00001242   0x00001242   0x00000002   PAD
    0x00001244   0x00001244   0x00000034   Code   RO           76    .text.vPortSetupTimerInterrupt  port.o
    0x00001278   0x00001278   0x00000062   Code   RO           92    .text.vPortValidateInterruptPriority  port.o
    0x000012da   0x000012da   0x00000002   PAD
    0x000012dc   0x000012dc   0x00000046   Code   RO          168    .text.vQueueWaitForMessageRestricted  queue.o
    0x00001322   0x00001322   0x00000002   PAD
    0x00001324   0x00001324   0x000000c2   Code   RO          200    .text.vTaskDelay    tasks.o
    0x000013e6   0x000013e6   0x00000002   PAD
    0x000013e8   0x000013e8   0x0000001a   Code   RO          246    .text.vTaskInternalSetTimeOutState  tasks.o
    0x00001402   0x00001402   0x00000002   PAD
    0x00001404   0x00001404   0x0000000e   Code   RO          250    .text.vTaskMissedYield  tasks.o
    0x00001412   0x00001412   0x00000002   PAD
    0x00001414   0x00001414   0x00000036   Code   RO          234    .text.vTaskPlaceOnEventList  tasks.o
    0x0000144a   0x0000144a   0x00000002   PAD
    0x0000144c   0x0000144c   0x0000003e   Code   RO          238    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x0000148a   0x0000148a   0x00000002   PAD
    0x0000148c   0x0000148c   0x000000c6   Code   RO          260    .text.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x00001552   0x00001552   0x00000002   PAD
    0x00001554   0x00001554   0x00000098   Code   RO          218    .text.vTaskStartScheduler  tasks.o
    0x000015ec   0x000015ec   0x00000192   Code   RO          210    .text.vTaskSuspend  tasks.o
    0x0000177e   0x0000177e   0x00000002   PAD
    0x00001780   0x00001780   0x00000010   Code   RO          194    .text.vTaskSuspendAll  tasks.o
    0x00001790   0x00001790   0x00000086   Code   RO          212    .text.vTaskSwitchContext  tasks.o
    0x00001816   0x00001816   0x00000002   PAD
    0x00001818   0x00001818   0x00000132   Code   RO           74    .text.xPortStartScheduler  port.o
    0x0000194a   0x0000194a   0x00000002   PAD
    0x0000194c   0x0000194c   0x00000028   Code   RO          128    .text.xQueueCreateMutex  queue.o
    0x00001974   0x00001974   0x0000007e   Code   RO          126    .text.xQueueGenericCreate  queue.o
    0x000019f2   0x000019f2   0x00000002   PAD
    0x000019f4   0x000019f4   0x00000238   Code   RO          132    .text.xQueueGenericSend  queue.o
    0x00001c2c   0x00001c2c   0x000000e6   Code   RO          146    .text.xQueueGiveFromISR  queue.o
    0x00001d12   0x00001d12   0x00000002   PAD
    0x00001d14   0x00001d14   0x000001a8   Code   RO          148    .text.xQueueReceive  queue.o
    0x00001ebc   0x00001ebc   0x000001e2   Code   RO          136    .text.xQueueSemaphoreTake  queue.o
    0x0000209e   0x0000209e   0x00000002   PAD
    0x000020a0   0x000020a0   0x0000008e   Code   RO          248    .text.xTaskCheckForTimeOut  tasks.o
    0x0000212e   0x0000212e   0x00000002   PAD
    0x00002130   0x00002130   0x000001ce   Code   RO          188    .text.xTaskCreate   tasks.o
    0x000022fe   0x000022fe   0x00000002   PAD
    0x00002300   0x00002300   0x00000026   Code   RO          254    .text.xTaskGetSchedulerState  tasks.o
    0x00002326   0x00002326   0x00000002   PAD
    0x00002328   0x00002328   0x0000000c   Code   RO          226    .text.xTaskGetTickCount  tasks.o
    0x00002334   0x00002334   0x00000180   Code   RO          224    .text.xTaskIncrementTick  tasks.o
    0x000024b4   0x000024b4   0x000000b2   Code   RO          258    .text.xTaskPriorityDisinherit  tasks.o
    0x00002566   0x00002566   0x00000002   PAD
    0x00002568   0x00002568   0x000000b2   Code   RO          256    .text.xTaskPriorityInherit  tasks.o
    0x0000261a   0x0000261a   0x00000002   PAD
    0x0000261c   0x0000261c   0x00000090   Code   RO          240    .text.xTaskRemoveFromEventList  tasks.o
    0x000026ac   0x000026ac   0x0000013c   Code   RO          198    .text.xTaskResumeAll  tasks.o
    0x000027e8   0x000027e8   0x000000a4   Code   RO          307    .text.xTimerCreateTimerTask  timers.o
    0x0000288c   0x0000288c   0x00000028   Code   RO          350    i.GPIODirModeSet    driverlib.lib(gpio.o)
    0x000028b4   0x000028b4   0x00000006   Code   RO          351    i.GPIOIntClear      driverlib.lib(gpio.o)
    0x000028ba   0x000028ba   0x0000000c   Code   RO          353    i.GPIOIntEnable     driverlib.lib(gpio.o)
    0x000028c6   0x000028c6   0x0000001a   Code   RO          354    i.GPIOIntRegister   driverlib.lib(gpio.o)
    0x000028e0   0x000028e0   0x00000050   Code   RO          358    i.GPIOIntTypeSet    driverlib.lib(gpio.o)
    0x00002930   0x00002930   0x00000170   Code   RO          362    i.GPIOPadConfigSet  driverlib.lib(gpio.o)
    0x00002aa0   0x00002aa0   0x00000006   Code   RO          364    i.GPIOPinRead       driverlib.lib(gpio.o)
    0x00002aa6   0x00002aa6   0x0000001c   Code   RO          373    i.GPIOPinTypeGPIOInput  driverlib.lib(gpio.o)
    0x00002ac2   0x00002ac2   0x0000001c   Code   RO          374    i.GPIOPinTypeGPIOOutput  driverlib.lib(gpio.o)
    0x00002ade   0x00002ade   0x0000001c   Code   RO          386    i.GPIOPinTypeUART   driverlib.lib(gpio.o)
    0x00002afa   0x00002afa   0x00000006   Code   RO          392    i.GPIOPinWrite      driverlib.lib(gpio.o)
    0x00002b00   0x00002b00   0x00000018   Code   RO          393    i.GPIOUnlockPin     driverlib.lib(gpio.o)
    0x00002b18   0x00002b18   0x00000064   Code   RO          684    i.IntEnable         driverlib.lib(interrupt.o)
    0x00002b7c   0x00002b7c   0x0000000e   Code   RO          687    i.IntMasterEnable   driverlib.lib(interrupt.o)
    0x00002b8a   0x00002b8a   0x00000002   PAD
    0x00002b8c   0x00002b8c   0x00000028   Code   RO          695    i.IntPrioritySet    driverlib.lib(interrupt.o)
    0x00002bb4   0x00002bb4   0x00000034   Code   RO          696    i.IntRegister       driverlib.lib(interrupt.o)
    0x00002be8   0x00002be8   0x00000154   Code   RO          802    i.SysCtlClockGet    driverlib.lib(sysctl.o)
    0x00002d3c   0x00002d3c   0x00000028   Code   RO          833    i.SysCtlPeripheralEnable  driverlib.lib(sysctl.o)
    0x00002d64   0x00002d64   0x0000002c   Code   RO          837    i.SysCtlPeripheralReady  driverlib.lib(sysctl.o)
    0x00002d90   0x00002d90   0x0000000c   Code   RO         1155    i.UARTCharPut       driverlib.lib(uart.o)
    0x00002d9c   0x00002d9c   0x0000006e   Code   RO         1161    i.UARTConfigSetExpClk  driverlib.lib(uart.o)
    0x00002e0a   0x00002e0a   0x0000001e   Code   RO         1164    i.UARTDisable       driverlib.lib(uart.o)
    0x00002e28   0x00002e28   0x00000014   Code   RO         1166    i.UARTEnable        driverlib.lib(uart.o)
    0x00002e3c   0x00002e3c   0x00000050   Code   RO          394    i._GPIOIntNumberGet  driverlib.lib(gpio.o)
    0x00002e8c   0x00002e8c   0x0000001a   Code   RO         1549    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x00002ea6   0x00002ea6   0x00000002   PAD
    0x00002ea8   0x00002ea8   0x00000228   Data   RO          395    .constdata          driverlib.lib(gpio.o)
    0x000030d0   0x000030d0   0x0000010c   Data   RO          700    .constdata          driverlib.lib(interrupt.o)
    0x000031dc   0x000031dc   0x00000254   Data   RO          855    .constdata          driverlib.lib(sysctl.o)
    0x00003430   0x00003430   0x00000005   Data   RO           16    .rodata.str1.1      main.o
    0x00003435   0x00003435   0x00000003   PAD
    0x00003438   0x00003438   0x00000020   Data   RO         1624    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x00003800, Size: 0x00002a28, Max: 0x00008000, ABSOLUTE, COMPRESSED[0x00000018])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00000004   Data   RW           39    .data.SystemCoreClock  system_tm4c123.o
    0x20000004   COMPRESSED   0x00000004   Data   RW           96    .data.uxCriticalNesting  port.o
    0x20000008   COMPRESSED   0x000003f8   PAD
    0x20000400   COMPRESSED   0x0000026c   Data   RW          701    vtable              driverlib.lib(interrupt.o)
    0x2000066c   COMPRESSED   0x00000004   PAD
    0x20000670        -       0x00000060   Zero   RW         1489    .bss                c_w.l(libspace.o)
    0x200006d0        -       0x00000004   Zero   RW           15    .bss.mutex          main.o
    0x200006d4        -       0x00000004   Zero   RW          335    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x200006d8        -       0x00000004   Zero   RW          113    .bss.pvPortMalloc.pucAlignedHeap  heap_1.o
    0x200006dc        -       0x00000004   Zero   RW          278    .bss.pxCurrentTCB   tasks.o
    0x200006e0        -       0x00000004   Zero   RW          333    .bss.pxCurrentTimerList  timers.o
    0x200006e4        -       0x00000004   Zero   RW          288    .bss.pxDelayedTaskList  tasks.o
    0x200006e8        -       0x00000004   Zero   RW          289    .bss.pxOverflowDelayedTaskList  tasks.o
    0x200006ec        -       0x00000004   Zero   RW          334    .bss.pxOverflowTimerList  timers.o
    0x200006f0        -       0x00000064   Zero   RW          279    .bss.pxReadyTasksLists  tasks.o
    0x20000754        -       0x00000004   Zero   RW           14    .bss.semaphore      main.o
    0x20000758        -       0x00002000   Zero   RW          114    .bss.ucHeap         heap_1.o
    0x20002758        -       0x00000001   Zero   RW           94    .bss.ucMaxSysCallPriority  port.o
    0x20002759   COMPRESSED   0x00000003   PAD
    0x2000275c        -       0x00000004   Zero   RW           95    .bss.ulMaxPRIGROUPValue  port.o
    0x20002760        -       0x00000004   Zero   RW          284    .bss.uxCurrentNumberOfTasks  tasks.o
    0x20002764        -       0x00000004   Zero   RW          283    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x20002768        -       0x00000004   Zero   RW          295    .bss.uxPendedTicks  tasks.o
    0x2000276c        -       0x00000004   Zero   RW          286    .bss.uxSchedulerSuspended  tasks.o
    0x20002770        -       0x00000004   Zero   RW          281    .bss.uxTaskNumber   tasks.o
    0x20002774        -       0x00000004   Zero   RW          280    .bss.uxTopReadyPriority  tasks.o
    0x20002778        -       0x00000014   Zero   RW          336    .bss.xActiveTimerList1  timers.o
    0x2000278c        -       0x00000014   Zero   RW          337    .bss.xActiveTimerList2  timers.o
    0x200027a0        -       0x00000014   Zero   RW          297    .bss.xDelayedTaskList1  tasks.o
    0x200027b4        -       0x00000014   Zero   RW          298    .bss.xDelayedTaskList2  tasks.o
    0x200027c8        -       0x00000004   Zero   RW          292    .bss.xIdleTaskHandle  tasks.o
    0x200027cc        -       0x00000004   Zero   RW          115    .bss.xNextFreeByte  heap_1.o
    0x200027d0        -       0x00000004   Zero   RW          293    .bss.xNextTaskUnblockTime  tasks.o
    0x200027d4        -       0x00000004   Zero   RW          296    .bss.xNumOfOverflows  tasks.o
    0x200027d8        -       0x00000014   Zero   RW          291    .bss.xPendingReadyList  tasks.o
    0x200027ec        -       0x00000004   Zero   RW          285    .bss.xSchedulerRunning  tasks.o
    0x200027f0        -       0x00000014   Zero   RW          290    .bss.xSuspendedTaskList  tasks.o
    0x20002804        -       0x00000014   Zero   RW          282    .bss.xTasksWaitingTermination  tasks.o
    0x20002818        -       0x00000004   Zero   RW          287    .bss.xTickCount     tasks.o
    0x2000281c        -       0x00000004   Zero   RW          331    .bss.xTimerQueue    timers.o
    0x20002820        -       0x00000004   Zero   RW          332    .bss.xTimerTaskHandle  timers.o
    0x20002824        -       0x00000004   Zero   RW          294    .bss.xYieldPending  tasks.o
    0x20002828        -       0x00000000   Zero   RW           26    HEAP                startup_tm4c123.o
    0x20002828        -       0x00000200   Zero   RW           25    STACK               startup_tm4c123.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       116          0          0          0       8200       1755   heap_1.o
       150          0          0          0          0       2331   list.o
       782         52          5          0          8       2176   main.o
       904         16          0          4          5       4134   port.o
      2298          0          0          0          0      22304   queue.o
       276         24        620          0        512       5452   startup_tm4c123.o
       112          0          0          4          0       6443   system_tm4c123.o
      3414          8          0          0        260      26024   tasks.o
      1028          8          0          0         60      11939   timers.o

    ----------------------------------------------------------------------
      9168        128        660       1024       9048      82558   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        88         20          3       1016          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        58          0          0          0          0          0   __dczerorl.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        38          0          0          0          0        572   cpu.o
       732         38        552          0          0      12780   gpio.o
       206         20        268        620          0       3197   interrupt.o
       424         44        596          0          0       3674   sysctl.o
       172          0          0          0          0       2909   uart.o
        26          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
      2156        118       1416        620        100      23980   Library Totals
        12          0          0          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       546         16          0          0         96        732   c_w.l
      1572        102       1416        620          0      23132   driverlib.lib
        26          0          0          0          0        116   fz_wm.l

    ----------------------------------------------------------------------
      2156        118       1416        620        100      23980   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     11324        246       2076       1644       9148     104138   Grand Totals
     11324        246       2076         24       9148     104138   ELF Image Totals (compressed)
     11324        246       2076         24          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                13400 (  13.09kB)
    Total RW  Size (RW Data + ZI Data)             10792 (  10.54kB)
    Total ROM Size (Code + RO Data + RW Data)      13424 (  13.11kB)

==============================================================================

